!function(){"use strict";var e=class{constructor(e,t){var s,n;n=()=>this._inputEls.every((e=>e.validity.valid)),(s="_checkFormValidity")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=document.querySelector(t),this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)]}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e){this._popupElement=document.querySelector(e),this._exitButton=this._popupElement.querySelector(".modal__exit-button"),this._handleEscUp=this._handleEscUp.bind(this)}_handleEscUp(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>this._closePopupWithOverlay(e))),this._exitButton.addEventListener("click",(()=>this.close()))}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscUp)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscUp)}_closePopupWithOverlay(e){e.target.classList.contains("modal_opened")&&this.close()}}class n extends s{constructor(e,t){super(e),this._handleSubmit=t,this._formEl=this._popupElement.querySelector(".modal__form"),this._inputEls=Array.from(this._formEl.querySelectorAll(".modal__form-input"))}_getInputValues(){const e={};return this._inputEls.forEach((t=>{e[t.name]=t.value})),e}close(){this._formEl.reset(),super.close()}setEventListeners(){super.setEventListeners(),this._formEl.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleSubmit(t)}))}}document.querySelector("#profileEdit"),document.querySelector("#cardAdd");const i=document.querySelector("#openModal"),r=document.querySelector("#openModal2"),o=(document.querySelector("#profileExitBtn"),document.querySelector("#addExitBtn"),document.querySelector("#edit-form"),document.querySelector("#add-form"),document.querySelector("#nameInput")),l=document.querySelector("#jobInput"),a=document.querySelector(".profile__title"),c=document.querySelector(".profile__description"),d={inputSelector:".modal__form-input",submitButtonSelector:".modal__form-button",inactiveButtonClass:"modal__form-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"modal__error_visible"},u=e=>new class{constructor(e,s){let{data:n,handlePreview:i}=e;t(this,"_handleLike",(()=>{this._cardLikeButton.classList.toggle("card__like-button_on")})),t(this,"_handleDelete",(()=>{this._element.remove(),this._element=null})),this._name=n.name,this._link=n.link,this._cardSelector=s,this._data=n,this._handlePreview=i}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardLikeButton.addEventListener("click",this._handleLike),this._cardDeleteButton.addEventListener("click",this._handleDelete),this._cardImage.addEventListener("click",(()=>this._handlePreview(this._data)))}generateCard(){return this._element=this._getTemplate(),this._cardLikeButton=this._element.querySelector(".card__like-button"),this._cardDeleteButton=this._element.querySelector(".card__delete-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._element}}({data:e,handlePreview:e=>{_.open(e)}},"#cardTemplate").generateCard(),_=new class extends s{constructor(e){super(e),this._previewImage=this._popupElement.querySelector(".modal__preview-image"),this._previewTitle=this._popupElement.querySelector(".modal__preview-title")}open(e){this._previewImage.src=e.link,this._previewImage.alt=`A picture of ${e.name}`,this._previewTitle.textContent=e.name,super.open()}}("#image-preview");_.setEventListeners();const h=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderer=n,this._container=document.querySelector(t),this._item=s}renderItems(){this._item.forEach((e=>{this._renderer(e)}))}addItems(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{const t=u(e);h.addItems(t)}},".cards__list");h.renderItems();const m=new n("#cardAdd",(e=>{const t={name:e.title,link:e.link},s=u(t);h.addItems(s),m.close()}));m.setEventListeners();const p=new e(d,"#add-form");p.enableValidation(),r.addEventListener("click",(()=>{p.toggleButtonState(),m.open()}));const E=new class{constructor(e){let{nameElement:t,jobElement:s}=e;this._name=t,this._job=s}getUserInfo(){return{userName:this._name.textContent,userJob:this._job.textContent}}setUserInfo(e){this._name.textContent=e.name,this._job.textContent=e.description}}({nameElement:a,jobElement:c}),v=new n("#profileEdit",(e=>{E.setUserInfo(e),v.close()}));v.setEventListeners(),i.addEventListener("click",(()=>{const{userName:e,userJob:t}=E.getUserInfo();o.value=e,l.value=t,v.open()})),new e(d,"#edit-form").enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,